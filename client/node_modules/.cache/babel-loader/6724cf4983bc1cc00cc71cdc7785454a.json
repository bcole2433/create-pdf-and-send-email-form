{"ast":null,"code":"import _objectSpread from \"/Users/brendencoleman/Desktop/Dev/New Account Start Form/client/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/brendencoleman/Desktop/Dev/New Account Start Form/client/src/App.js\";\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { saveAs } from \"file-saver\";\nimport Nav from \"./Components/Nav\";\nimport StartForm from \"./Components/Form\";\nimport { Container } from \"react-bootstrap\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.callBackendAPI = async () => {\n      const response = await fetch(\"/express_backend\");\n      const body = await response.json();\n\n      if (response.status !== 200) {\n        throw Error(body.message);\n      }\n\n      return body;\n    };\n\n    this.handleInputChange = e => {\n      e.preventDefault();\n      const target = e.target;\n      const value = target.value;\n      const name = target.name;\n      console.log(name, value);\n      this.setState(prevState => ({\n        item: _objectSpread({}, prevState.item, {\n          [name]: value\n        })\n      }));\n    };\n\n    this.onWalkDateChange = date => {\n      this.setState(prevState => ({\n        item: _objectSpread({}, prevState.item, {\n          walkthroughDate: date\n        })\n      }));\n    };\n\n    this.onStartDateChange = date => {\n      this.setState(prevState => ({\n        item: _objectSpread({}, prevState.item, {\n          startDate: date\n        })\n      }));\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault(); //this.createPDF();\n\n      this.createAndSendEmail();\n    };\n\n    this.createPDF = async () => {\n      axios.post(\"/create-pdf\", this.state.item).then(() => axios.get(\"/fetch-pdf\", {\n        responseType: \"blob\"\n      })).then(res => {\n        const pdfBlob = new Blob([res.data], {\n          type: \"application/pdf\"\n        });\n        saveAs(pdfBlob, this.state.item.accountName + \"StratusStartForm.pdf\");\n      });\n    };\n\n    this.createAndSendEmail = async () => {\n      console.log(\"creating email\");\n\n      const content = _objectSpread({}, this.state.item); //INSERT THE EMAIL YOU WANT TO SEND FROM OR (RECOMMENDED) ADD IT TO A .ENV FILE\n\n\n      const from = \"brenden.d.coleman@gmail.com\";\n      const toField = [from, content.email, content.franchiseeEmail];\n      const acc = content.accountName;\n      const account = acc.split(\" \").join(\"\");\n      const emailData = {\n        from: from,\n        to: toField,\n        subject: \"New Start Form submission for \" + account,\n        account: account,\n        content: content\n      };\n      axios.post(\"/send-email\", emailData).then(res => {\n        console.log(res);\n        console.log(res.data);\n      }).catch(error => {\n        console.log(error.message);\n      });\n    };\n\n    this.state = {\n      data: null,\n      item: {\n        id: \"\",\n        email: \"\",\n        personCompleting: \"\",\n        accountName: \"\",\n        address: \"\",\n        customerEmail: \"\",\n        walkthroughDate: new Date(),\n        startDate: new Date(),\n        franchisee: \"\",\n        franchiseeEmail: \"\"\n      }\n    };\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.onWalkDateChange = this.onWalkDateChange.bind(this);\n    this.onStartDateChange = this.onStartDateChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.createAndSendEmail = this.createAndSendEmail.bind(this);\n  }\n\n  componentDidMount() {\n    // Call our fetch function below once the component mounts\n    this.callBackendAPI().then(res => this.setState({\n      data: res.express\n    })).catch(err => console.log(err));\n  } // Fetches our GET route from the Express server. (Note the route we are fetching matches the GET route from server.js\n\n\n  render() {\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, React.createElement(Nav, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }), React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, \"Company_Name New Account Start Form\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }), React.createElement(StartForm, {\n      item: this.state.item,\n      handleInputChange: this.handleInputChange,\n      onWalkDateChange: this.onWalkDateChange,\n      onStartDateChange: this.onStartDateChange,\n      handleSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/brendencoleman/Desktop/Dev/New Account Start Form/client/src/App.js"],"names":["React","Component","axios","saveAs","Nav","StartForm","Container","App","constructor","props","callBackendAPI","response","fetch","body","json","status","Error","message","handleInputChange","e","preventDefault","target","value","name","console","log","setState","prevState","item","onWalkDateChange","date","walkthroughDate","onStartDateChange","startDate","handleSubmit","createAndSendEmail","createPDF","post","state","then","get","responseType","res","pdfBlob","Blob","data","type","accountName","content","from","toField","email","franchiseeEmail","acc","account","split","join","emailData","to","subject","catch","error","id","personCompleting","address","customerEmail","Date","franchisee","bind","componentDidMount","express","err","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { saveAs } from \"file-saver\";\nimport Nav from \"./Components/Nav\";\nimport StartForm from \"./Components/Form\";\nimport { Container } from \"react-bootstrap\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: null,\n      item: {\n        id: \"\",\n        email: \"\",\n        personCompleting: \"\",\n        accountName: \"\",\n        address: \"\",\n        customerEmail: \"\",\n        walkthroughDate: new Date(),\n        startDate: new Date(),\n        franchisee: \"\",\n        franchiseeEmail: \"\",\n      }\n    };\n\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.onWalkDateChange = this.onWalkDateChange.bind(this);\n    this.onStartDateChange = this.onStartDateChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.createAndSendEmail = this.createAndSendEmail.bind(this);\n  }\n\n  componentDidMount() {\n    // Call our fetch function below once the component mounts\n    this.callBackendAPI()\n      .then(res => this.setState({ data: res.express }))\n      .catch(err => console.log(err));\n  }\n\n  // Fetches our GET route from the Express server. (Note the route we are fetching matches the GET route from server.js\n  callBackendAPI = async () => {\n    const response = await fetch(\"/express_backend\");\n    const body = await response.json();\n\n    if (response.status !== 200) {\n      throw Error(body.message);\n    }\n    return body;\n  };\n\n  handleInputChange = e => {\n    e.preventDefault();\n    const target = e.target;\n    const value = target.value;\n    const name = target.name;\n    console.log(name, value);\n\n    this.setState(prevState => ({\n      item: { ...prevState.item, [name]: value }\n    }));\n  };\n\n  onWalkDateChange = date => {\n    this.setState(prevState => ({\n      item: { ...prevState.item, walkthroughDate: date }\n    }));\n  };\n\n  onStartDateChange = date => {\n    this.setState(prevState => ({\n      item: { ...prevState.item, startDate: date }\n    }));\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    //this.createPDF();\n    this.createAndSendEmail();\n  };\n\n  createPDF = async () => {\n    axios\n      .post(\"/create-pdf\", this.state.item)\n      .then(() => axios.get(\"/fetch-pdf\", { responseType: \"blob\" }))\n      .then(res => {\n        const pdfBlob = new Blob([res.data], { type: \"application/pdf\" });\n        saveAs(pdfBlob, this.state.item.accountName + \"StratusStartForm.pdf\");\n      });\n  };\n\n  createAndSendEmail = async () => {\n    console.log(\"creating email\");\n    const content = { ...this.state.item };\n    //INSERT THE EMAIL YOU WANT TO SEND FROM OR (RECOMMENDED) ADD IT TO A .ENV FILE\n    const from = \"brenden.d.coleman@gmail.com\";\n    const toField = [from, content.email, content.franchiseeEmail];\n    const acc = content.accountName;\n    const account = acc.split(\" \").join(\"\");\n    const emailData = {\n      from: from,\n      to: toField,\n      subject: \"New Start Form submission for \" + account,\n      account: account,\n      content: content\n    };\n\n    axios\n      .post(\"/send-email\", emailData)\n      .then(res => {\n        console.log(res);\n        console.log(res.data);\n      })\n      .catch(error => {\n        console.log(error.message);\n      });\n  };\n\n  render() {\n    return (\n      <React.Fragment>\n        <Nav />\n        <br />\n        <Container>\n          <h1>Company_Name New Account Start Form</h1>\n          <br />\n          <StartForm\n            item={this.state.item}\n            handleInputChange={this.handleInputChange}\n            onWalkDateChange={this.onWalkDateChange}\n            onStartDateChange={this.onStartDateChange}\n            handleSubmit={this.handleSubmit}\n          />\n        </Container>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}