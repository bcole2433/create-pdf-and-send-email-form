{"ast":null,"code":"import _objectSpread from \"/Users/brendencoleman/Desktop/Dev/New Account Start Form/client/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/brendencoleman/Desktop/Dev/New Account Start Form/client/src/App.js\";\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { saveAs } from \"file-saver\";\nimport Nav from \"./Components/Nav\";\nimport StartForm from \"./Components/Form\";\nimport { Container } from \"react-bootstrap\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.callBackendAPI = async () => {\n      const response = await fetch(\"/express_backend\");\n      const body = await response.json();\n\n      if (response.status !== 200) {\n        throw Error(body.message);\n      }\n\n      return body;\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      this.createPDF();\n      this.createAndSendEmail();\n    };\n\n    this.resetForm = () => {\n      this.setState({\n        item: {\n          id: \"\",\n          email: \"\",\n          personCompleting: \"\",\n          accountName: \"\",\n          address: \"\",\n          customerEmail: \"\",\n          walkthroughDate: new Date(),\n          startDate: new Date(),\n          franchisee: \"\",\n          franchiseeEmail: \"\"\n        }\n      });\n    };\n\n    this.handleInputChange = e => {\n      e.preventDefault();\n      const target = e.target;\n      const value = target.value;\n      const name = target.name;\n      this.setState({\n        item: _objectSpread({}, this.state.item, {\n          [name]: value\n        })\n      });\n    };\n\n    this.onWalkDateChange = date => {\n      this.setState({\n        item: _objectSpread({}, this.state.item, {\n          walkthroughDate: date\n        })\n      });\n    };\n\n    this.onStartDateChange = date => {\n      this.setState({\n        item: _objectSpread({}, this.state.item, {\n          startDate: date\n        })\n      });\n    };\n\n    this.createPDF = () => {\n      axios.post(\"/create-pdf\", this.state.item).then(() => axios.get(\"/fetch-pdf\", {\n        responseType: \"blob\"\n      })).then(res => {\n        const pdfBlob = new Blob([res.data], {\n          type: \"application/pdf\"\n        });\n        saveAs(pdfBlob, this.state.item.accountName + \"StratusStartForm.pdf\");\n        alert(\"You submitted the form!\");\n        this.resetForm();\n      });\n    };\n\n    this.createAndSendEmail = () => {\n      const content = _objectSpread({}, this.state.item);\n\n      console.log(\"creating email for \" + content.personCompleting + \", \" + content.email); //INSERT THE EMAIL YOU WANT TO SEND FROM OR (RECOMMENDED) ADD IT TO A .ENV FILE\n\n      const from = \"[INSERT EMAIL HERE OR process.env.email]\";\n      const toField = [from, content.email, content.franchiseeEmail];\n      const acc = content.accountName;\n      const emailData = {\n        from: from,\n        to: toField,\n        subject: \"New Start Form submission for \" + acc,\n        content: content\n      };\n      axios.post(\"/send-email\", emailData).then(res => {\n        console.log(res);\n        console.log(res.data);\n      }).catch(error => {\n        console.log(error.message);\n      });\n    };\n\n    this.state = {\n      data: null,\n      item: {\n        id: \"\",\n        email: \"\",\n        personCompleting: \"\",\n        accountName: \"\",\n        address: \"\",\n        customerEmail: \"\",\n        walkthroughDate: new Date(),\n        startDate: new Date(),\n        franchisee: \"\",\n        franchiseeEmail: \"\"\n      }\n    };\n  }\n\n  componentDidMount() {\n    // Call our fetch function below once the component mounts\n    this.callBackendAPI().then(res => this.setState({\n      data: res.express\n    })).catch(err => console.log(err));\n  } // Fetches GET route from express server\n\n\n  render() {\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, React.createElement(Nav, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }), React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, \"Company_Name New Account Start Form\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }), React.createElement(StartForm, {\n      item: this.state.item,\n      handleInputChange: this.handleInputChange,\n      onWalkDateChange: this.onWalkDateChange,\n      onStartDateChange: this.onStartDateChange,\n      handleSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/brendencoleman/Desktop/Dev/New Account Start Form/client/src/App.js"],"names":["React","Component","axios","saveAs","Nav","StartForm","Container","App","constructor","props","callBackendAPI","response","fetch","body","json","status","Error","message","handleSubmit","e","preventDefault","createPDF","createAndSendEmail","resetForm","setState","item","id","email","personCompleting","accountName","address","customerEmail","walkthroughDate","Date","startDate","franchisee","franchiseeEmail","handleInputChange","target","value","name","state","onWalkDateChange","date","onStartDateChange","post","then","get","responseType","res","pdfBlob","Blob","data","type","alert","content","console","log","from","toField","acc","emailData","to","subject","catch","error","componentDidMount","express","err","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { saveAs } from \"file-saver\";\nimport Nav from \"./Components/Nav\";\nimport StartForm from \"./Components/Form\";\nimport { Container } from \"react-bootstrap\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: null,\n      item: {\n        id: \"\",\n        email: \"\",\n        personCompleting: \"\",\n        accountName: \"\",\n        address: \"\",\n        customerEmail: \"\",\n        walkthroughDate: new Date(),\n        startDate: new Date(),\n        franchisee: \"\",\n        franchiseeEmail: \"\",\n      }\n    };\n  }\n\n  componentDidMount() {\n    // Call our fetch function below once the component mounts\n    this.callBackendAPI()\n      .then(res => this.setState({ data: res.express }))\n      .catch(err => console.log(err));\n  }\n\n  // Fetches GET route from express server\n  callBackendAPI = async () => {\n    const response = await fetch(\"/express_backend\");\n    const body = await response.json();\n\n    if (response.status !== 200) {\n      throw Error(body.message);\n    }\n    return body;\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    this.createPDF();\n    this.createAndSendEmail();\n  };\n\n  //manually reset form\n  resetForm = () => {\n    this.setState({\n      item: {\n        id: \"\",\n        email: \"\",\n        personCompleting: \"\",\n        accountName: \"\",\n        address: \"\",\n        customerEmail: \"\",\n        walkthroughDate: new Date(),\n        startDate: new Date(),\n        franchisee: \"\",\n        franchiseeEmail: \"\",\n      }\n    });\n  };\n\n  handleInputChange = (e) => {\n    e.preventDefault();\n    const target = e.target;\n    const value = target.value;\n    const name = target.name;\n\n    this.setState({\n      item: { ...this.state.item, [name]: value }\n    });\n  };\n\n  onWalkDateChange = (date) => {\n    this.setState({\n      item: { ...this.state.item, walkthroughDate: date }\n    });\n  };\n\n  onStartDateChange = (date) => {\n    this.setState({\n      item: { ...this.state.item, startDate: date }\n    });\n  };\n\n  createPDF = () => {\n    axios\n      .post(\"/create-pdf\", this.state.item)\n      .then(() => axios.get(\"/fetch-pdf\", { responseType: \"blob\" }))\n      .then(res => {\n        const pdfBlob = new Blob([res.data], { type: \"application/pdf\" });\n        saveAs(pdfBlob, this.state.item.accountName + \"StratusStartForm.pdf\");\n        alert(\"You submitted the form!\");\n        this.resetForm()\n      });\n  };\n\n  createAndSendEmail = () => {\n    const content = {...this.state.item };\n    console.log(\"creating email for \" + content.personCompleting + \", \" + content.email);\n\n    //INSERT THE EMAIL YOU WANT TO SEND FROM OR (RECOMMENDED) ADD IT TO A .ENV FILE\n    const from = \"[INSERT EMAIL HERE OR process.env.email]\";\n    const toField = [from, content.email, content.franchiseeEmail];\n    const acc = content.accountName;\n    const emailData = {\n      from: from,\n      to: toField,\n      subject: \"New Start Form submission for \" + acc,\n      content: content,\n    };\n\n    axios\n      .post(\"/send-email\", emailData)\n      .then(res => {\n        console.log(res);\n        console.log(res.data);\n      })\n      .catch(error => {\n        console.log(error.message);\n      });\n  };\n\n  render() {\n    return (\n      <React.Fragment>\n        <Nav />\n        <br />\n        <Container>\n          <h1>Company_Name New Account Start Form</h1>\n          <br />\n          <StartForm\n            item={this.state.item}\n            handleInputChange={this.handleInputChange}\n            onWalkDateChange={this.onWalkDateChange}\n            onStartDateChange={this.onStartDateChange}\n            handleSubmit={this.handleSubmit}\n          />\n        </Container>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}