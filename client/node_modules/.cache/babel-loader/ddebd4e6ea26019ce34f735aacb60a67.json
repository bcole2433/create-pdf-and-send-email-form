{"ast":null,"code":"import _objectSpread from \"/Users/brendencoleman/Desktop/Dev/New Account Start Form/client/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/brendencoleman/Desktop/Dev/New Account Start Form/client/src/App.js\";\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { saveAs } from \"file-saver\";\nimport Nav from \"./Components/Nav\";\nimport StartForm from \"./Components/Form\";\nimport { Container } from \"react-bootstrap\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.callBackendAPI = async () => {\n      const response = await fetch(\"/express_backend\");\n      const body = await response.json();\n\n      if (response.status !== 200) {\n        throw Error(body.message);\n      }\n\n      return body;\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      this.createPDF();\n      this.createAndSendEmail();\n    };\n\n    this.handleInputChange = e => {\n      e.preventDefault();\n      const target = e.target;\n      const value = target.value;\n      const name = target.name;\n      this.setState({\n        item: _objectSpread({}, this.state.item, {\n          [name]: value\n        })\n      });\n    };\n\n    this.onWalkDateChange = date => {\n      this.setState({\n        item: _objectSpread({}, this.state.item, {\n          walkthroughDate: date\n        })\n      });\n    };\n\n    this.onStartDateChange = date => {\n      this.setState({\n        item: _objectSpread({}, this.state.item, {\n          startDate: date\n        })\n      });\n    };\n\n    this.createPDF = () => {\n      axios.post(\"/create-pdf\", this.state.item).then(() => axios.get(\"/fetch-pdf\", {\n        responseType: \"blob\"\n      })).then(res => {\n        const pdfBlob = new Blob([res.data], {\n          type: \"application/pdf\"\n        });\n        saveAs(pdfBlob, this.state.item.accountName + \"StratusStartForm.pdf\");\n        alert(\"You submitted the form!\");\n      });\n    };\n\n    this.createAndSendEmail = () => {\n      const content = _objectSpread({}, this.state.item);\n\n      console.log(\"creating email \" + content.email + \", \" + content.personCompleting); //INSERT THE EMAIL YOU WANT TO SEND FROM OR (RECOMMENDED) ADD IT TO A .ENV FILE\n\n      const from = \"[INSERT EMAIL HERE OR ]\";\n      const toField = [from, content.email, content.franchiseeEmail];\n      const acc = content.accountName;\n      const emailData = {\n        from: from,\n        to: toField,\n        subject: \"New Start Form submission for \" + acc,\n        content: content\n      };\n      axios.post(\"/send-email\", emailData).then(res => {\n        console.log(res);\n        console.log(res.data);\n      }).catch(error => {\n        console.log(error.message);\n      });\n    };\n\n    this.state = {\n      data: null,\n      item: {\n        id: \"\",\n        email: \"\",\n        personCompleting: \"\",\n        accountName: \"\",\n        address: \"\",\n        customerEmail: \"\",\n        walkthroughDate: new Date(),\n        startDate: new Date(),\n        franchisee: \"\",\n        franchiseeEmail: \"\"\n      }\n    }; // this.handleInputChange = this.handleInputChange.bind(this);\n    // this.onWalkDateChange = this.onWalkDateChange.bind(this);\n    // this.onStartDateChange = this.onStartDateChange.bind(this);\n    // this.handleSubmit = this.handleSubmit.bind(this);\n    // this.createAndSendEmail = this.createAndSendEmail.bind(this);\n  }\n\n  componentDidMount() {\n    // Call our fetch function below once the component mounts\n    this.callBackendAPI().then(res => this.setState({\n      data: res.express\n    })).catch(err => console.log(err));\n  } // Fetches our GET route from the Express server. (Note the route we are fetching matches the GET route from server.js\n\n\n  render() {\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, React.createElement(Nav, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }), React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, \"Company_Name New Account Start Form\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }), React.createElement(StartForm, {\n      item: this.state.item,\n      handleInputChange: this.handleInputChange,\n      onWalkDateChange: this.onWalkDateChange,\n      onStartDateChange: this.onStartDateChange,\n      handleSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/brendencoleman/Desktop/Dev/New Account Start Form/client/src/App.js"],"names":["React","Component","axios","saveAs","Nav","StartForm","Container","App","constructor","props","callBackendAPI","response","fetch","body","json","status","Error","message","handleSubmit","e","preventDefault","createPDF","createAndSendEmail","handleInputChange","target","value","name","setState","item","state","onWalkDateChange","date","walkthroughDate","onStartDateChange","startDate","post","then","get","responseType","res","pdfBlob","Blob","data","type","accountName","alert","content","console","log","email","personCompleting","from","toField","franchiseeEmail","acc","emailData","to","subject","catch","error","id","address","customerEmail","Date","franchisee","componentDidMount","express","err","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { saveAs } from \"file-saver\";\nimport Nav from \"./Components/Nav\";\nimport StartForm from \"./Components/Form\";\nimport { Container } from \"react-bootstrap\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: null,\n      item: {\n        id: \"\",\n        email: \"\",\n        personCompleting: \"\",\n        accountName: \"\",\n        address: \"\",\n        customerEmail: \"\",\n        walkthroughDate: new Date(),\n        startDate: new Date(),\n        franchisee: \"\",\n        franchiseeEmail: \"\",\n      }\n    };\n\n    // this.handleInputChange = this.handleInputChange.bind(this);\n    // this.onWalkDateChange = this.onWalkDateChange.bind(this);\n    // this.onStartDateChange = this.onStartDateChange.bind(this);\n    // this.handleSubmit = this.handleSubmit.bind(this);\n    // this.createAndSendEmail = this.createAndSendEmail.bind(this);\n  }\n\n  componentDidMount() {\n    // Call our fetch function below once the component mounts\n    this.callBackendAPI()\n      .then(res => this.setState({ data: res.express }))\n      .catch(err => console.log(err));\n  }\n\n  // Fetches our GET route from the Express server. (Note the route we are fetching matches the GET route from server.js\n  callBackendAPI = async () => {\n    const response = await fetch(\"/express_backend\");\n    const body = await response.json();\n\n    if (response.status !== 200) {\n      throw Error(body.message);\n    }\n    return body;\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    this.createPDF();\n    this.createAndSendEmail();\n  };\n\n  handleInputChange = (e) => {\n    e.preventDefault();\n    const target = e.target;\n    const value = target.value;\n    const name = target.name;\n\n    this.setState({\n      item: { ...this.state.item, [name]: value }\n    });\n  };\n\n  // handleInputChange = (e) => {\n  //   e.preventDefault();\n  //   const target = e.target;\n  //   const value = target.value;\n  //   const name = target.name;\n\n  //   this.setState(prevState => ({\n  //     item: { ...prevState.item, [name]: value }\n  //   }));\n  // };\n\n  onWalkDateChange = (date) => {\n    this.setState({\n      item: { ...this.state.item, walkthroughDate: date }\n    });\n  };\n\n  onStartDateChange = (date) => {\n    this.setState({\n      item: { ...this.state.item, startDate: date }\n    });\n  };\n\n  // onWalkDateChange = (date) => {\n  //   this.setState(prevState => ({\n  //     item: { ...prevState.item, walkthroughDate: date }\n  //   }));\n  // };\n\n  // onStartDateChange = (date) => {\n  //   this.setState(prevState => ({\n  //     item: { ...prevState.item, startDate: date }\n  //   }));\n  // };\n\n  createPDF = () => {\n    axios\n      .post(\"/create-pdf\", this.state.item)\n      .then(() => axios.get(\"/fetch-pdf\", { responseType: \"blob\" }))\n      .then(res => {\n        const pdfBlob = new Blob([res.data], { type: \"application/pdf\" });\n        saveAs(pdfBlob, this.state.item.accountName + \"StratusStartForm.pdf\");\n        alert(\"You submitted the form!\");\n      });\n  };\n\n  createAndSendEmail = () => {\n    const content = {...this.state.item };\n    console.log(\"creating email \" + content.email + \", \" + content.personCompleting);\n\n    //INSERT THE EMAIL YOU WANT TO SEND FROM OR (RECOMMENDED) ADD IT TO A .ENV FILE\n    const from = \"[INSERT EMAIL HERE OR ]\";\n    const toField = [from, content.email, content.franchiseeEmail];\n    const acc = content.accountName;\n    const emailData = {\n      from: from,\n      to: toField,\n      subject: \"New Start Form submission for \" + acc,\n      content: content,\n    };\n\n    axios\n      .post(\"/send-email\", emailData)\n      .then(res => {\n        console.log(res);\n        console.log(res.data);\n      })\n      .catch(error => {\n        console.log(error.message);\n      });\n  };\n\n  render() {\n    return (\n      <React.Fragment>\n        <Nav />\n        <br />\n        <Container>\n          <h1>Company_Name New Account Start Form</h1>\n          <br />\n          <StartForm\n            item={this.state.item}\n            handleInputChange={this.handleInputChange}\n            onWalkDateChange={this.onWalkDateChange}\n            onStartDateChange={this.onStartDateChange}\n            handleSubmit={this.handleSubmit}\n          />\n        </Container>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}