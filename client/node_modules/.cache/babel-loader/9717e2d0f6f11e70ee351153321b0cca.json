{"ast":null,"code":"import _objectSpread from \"/Users/brendencoleman/Desktop/Dev/stratuswebapp/client/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/brendencoleman/Desktop/Dev/stratuswebapp/client/src/App.js\";\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { saveAs } from \"file-saver\";\nimport Nav from \"./Components/Nav\";\nimport StartForm from \"./Components/Form\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.callBackendAPI = async () => {\n      const response = await fetch(\"/express_backend\");\n      const body = await response.json();\n\n      if (response.status !== 200) {\n        throw Error(body.message);\n      }\n\n      return body;\n    };\n\n    this.handleInputChange = e => {\n      e.preventDefault();\n      const target = e.target;\n      const value = target.type === \"checkbox\" ? target.checked : target.value;\n      const name = target.name;\n      console.log(name, value);\n      this.setState(prevState => ({\n        item: _objectSpread({}, prevState.item, {\n          [name]: value\n        })\n      }));\n    };\n\n    this.onWalkDateChange = date => {\n      this.setState(prevState => ({\n        item: _objectSpread({}, prevState.item, {\n          walkthroughDate: date\n        })\n      }));\n      console.log(date);\n    };\n\n    this.onStartDateChange = date => {\n      this.setState(prevState => ({\n        item: _objectSpread({}, prevState.item, {\n          startDate: date\n        })\n      }));\n      console.log(date);\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      this.createAndDownloadPdf();\n      const obj = this.state.item;\n      this.createAndSendEmail(obj);\n    };\n\n    this.createAndDownloadPdf = () => {\n      axios.post(\"/create-pdf\", this.state.item).then(() => axios.get(\"/fetch-pdf\", {\n        responseType: \"blob\"\n      })).then(res => {\n        const pdfBlob = new Blob([res.data], {\n          type: \"application/pdf\"\n        });\n        this.setState({\n          attachment: pdfBlob\n        });\n        saveAs(pdfBlob, this.state.item.accountName + \"StratusStartForm.pdf\");\n      });\n    };\n\n    this.createAndSendEmail = () => {\n      const from = \"brenden.d.coleman@gmail.com\";\n      const toField = [from, this.state.item.email, this.state.item.franchiseeEmail];\n      const account = this.state.item.accountName;\n      const pdfAttachement = this.state.attachement;\n      const emailData = {\n        from: from,\n        to: toField,\n        subject: \"New Start Form submission for \" + account,\n        body: \"Testing and testing\",\n        attachments: [{\n          content: pdfAttachement,\n          filename: 'NewStartForm',\n          type: 'application/pdf',\n          disposition: 'attachment'\n        }],\n        html: \"<strong>and easy to do anywhere, even with Node.js</strong>\"\n      };\n      axios.post(\"/send-email\", emailData).then(res => {\n        console.log(res);\n        console.log(res.data);\n      });\n    };\n\n    this.state = {\n      data: null,\n      attachement: new Blob(),\n      item: {\n        id: \"\",\n        email: \"\",\n        personCompleting: \"\",\n        accountName: \"\",\n        contactName: \"\",\n        address: \"\",\n        phoneNumber: \"\",\n        emergencyContact: \"\",\n        emergencyContactNumber: \"\",\n        customerEmail: \"\",\n        billingAddress: \"\",\n        walkthroughDate: new Date(),\n        startDate: new Date(),\n        franchisee: \"\",\n        franchiseeEmail: \"\",\n        daysCleaned: [],\n        timeCleaned: \"\",\n        monthlyBillingAmount: \"\",\n        initialClean: \"\",\n        initialCleanAmount: \"\",\n        buildingEntry: \"\",\n        communicationLogBook: \"\",\n        lightSwitchLocations: \"\",\n        mainPowerShutoff: \"\",\n        alarmSystem: \"\",\n        alarmCode: \"\",\n        storageAreas: \"\",\n        storageKey: \"\",\n        waterLocation: \"\",\n        waterTemp: \"\",\n        suppliesFurnish: \"\",\n        includedSupplies: \"\",\n        trashDisposalLocation: \"\",\n        keyEntry: \"\",\n        restroomSupply: \"\",\n        storageCloset: \"\",\n        commentsText: \"\"\n      }\n    };\n    this.handleInputChange = this.handleInputChange.bind(this); // this.handleCheckmarkChange = this.handleCheckmarkChange.bind(this);\n\n    this.onWalkDateChange = this.onWalkDateChange.bind(this);\n    this.onStartDateChange = this.onStartDateChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    // Call our fetch function below once the component mounts\n    this.callBackendAPI().then(res => this.setState({\n      data: res.express\n    })).catch(err => console.log(err));\n  } // Fetches our GET route from the Express server. (Note the route we are fetching matches the GET route from server.js\n\n\n  render() {\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, React.createElement(Nav, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }), React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, \"Stratus New Account Start Form\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }), React.createElement(StartForm, {\n      item: this.state.item,\n      handleInputChange: this.handleInputChange,\n      onWalkDateChange: this.onWalkDateChange,\n      onStartDateChange: this.onStartDateChange,\n      handleSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/brendencoleman/Desktop/Dev/stratuswebapp/client/src/App.js"],"names":["React","Component","axios","saveAs","Nav","StartForm","App","constructor","props","callBackendAPI","response","fetch","body","json","status","Error","message","handleInputChange","e","preventDefault","target","value","type","checked","name","console","log","setState","prevState","item","onWalkDateChange","date","walkthroughDate","onStartDateChange","startDate","handleSubmit","createAndDownloadPdf","obj","state","createAndSendEmail","post","then","get","responseType","res","pdfBlob","Blob","data","attachment","accountName","from","toField","email","franchiseeEmail","account","pdfAttachement","attachement","emailData","to","subject","attachments","content","filename","disposition","html","id","personCompleting","contactName","address","phoneNumber","emergencyContact","emergencyContactNumber","customerEmail","billingAddress","Date","franchisee","daysCleaned","timeCleaned","monthlyBillingAmount","initialClean","initialCleanAmount","buildingEntry","communicationLogBook","lightSwitchLocations","mainPowerShutoff","alarmSystem","alarmCode","storageAreas","storageKey","waterLocation","waterTemp","suppliesFurnish","includedSupplies","trashDisposalLocation","keyEntry","restroomSupply","storageCloset","commentsText","bind","componentDidMount","express","catch","err","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { saveAs } from \"file-saver\";\nimport Nav from \"./Components/Nav\";\nimport StartForm from \"./Components/Form\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: null,\n      attachement: new Blob(),\n      item: {\n        id: \"\",\n        email: \"\",\n        personCompleting: \"\",\n        accountName: \"\",\n        contactName: \"\",\n        address: \"\",\n        phoneNumber: \"\",\n        emergencyContact: \"\",\n        emergencyContactNumber: \"\",\n        customerEmail: \"\",\n        billingAddress: \"\",\n        walkthroughDate: new Date(),\n        startDate: new Date(),\n        franchisee: \"\",\n        franchiseeEmail: \"\",\n        daysCleaned: [],\n        timeCleaned: \"\",\n        monthlyBillingAmount: \"\",\n        initialClean: \"\",\n        initialCleanAmount: \"\",\n        buildingEntry: \"\",\n        communicationLogBook: \"\",\n        lightSwitchLocations: \"\",\n        mainPowerShutoff: \"\",\n        alarmSystem: \"\",\n        alarmCode: \"\",\n        storageAreas: \"\",\n        storageKey: \"\",\n        waterLocation: \"\",\n        waterTemp: \"\",\n        suppliesFurnish: \"\",\n        includedSupplies: \"\",\n        trashDisposalLocation: \"\",\n        keyEntry: \"\",\n        restroomSupply: \"\",\n        storageCloset: \"\",\n        commentsText: \"\"\n      }\n    };\n\n    this.handleInputChange = this.handleInputChange.bind(this);\n    // this.handleCheckmarkChange = this.handleCheckmarkChange.bind(this);\n    this.onWalkDateChange = this.onWalkDateChange.bind(this);\n    this.onStartDateChange = this.onStartDateChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    // Call our fetch function below once the component mounts\n    this.callBackendAPI()\n      .then(res => this.setState({ data: res.express }))\n      .catch(err => console.log(err));\n  }\n  // Fetches our GET route from the Express server. (Note the route we are fetching matches the GET route from server.js\n  callBackendAPI = async () => {\n    const response = await fetch(\"/express_backend\");\n    const body = await response.json();\n\n    if (response.status !== 200) {\n      throw Error(body.message);\n    }\n    return body;\n  };\n\n  handleInputChange = e => {\n    e.preventDefault();\n    const target = e.target;\n    const value = target.type === \"checkbox\" ? target.checked : target.value;\n    const name = target.name;\n    console.log(name, value);\n\n    this.setState(prevState => ({\n      item: { ...prevState.item, [name]: value }\n    }));\n  };\n\n  onWalkDateChange = date => {\n    this.setState(prevState => ({\n      item: { ...prevState.item, walkthroughDate: date }\n    }));\n    console.log(date);\n  };\n\n  onStartDateChange = date => {\n    this.setState(prevState => ({\n      item: { ...prevState.item, startDate: date }\n    }));\n    console.log(date);\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    this.createAndDownloadPdf();\n    const obj = this.state.item;\n    this.createAndSendEmail(obj);\n  };\n\n  createAndDownloadPdf = () => {\n    axios\n      .post(\"/create-pdf\", this.state.item)\n      .then(() => axios.get(\"/fetch-pdf\", { responseType: \"blob\" }))\n      .then(res => {\n        const pdfBlob = new Blob([res.data], { type: \"application/pdf\" });\n        this.setState({attachment: pdfBlob})\n        saveAs(pdfBlob, this.state.item.accountName + \"StratusStartForm.pdf\");\n      });\n  };\n\n  createAndSendEmail = () => {\n    const from = \"brenden.d.coleman@gmail.com\";\n    const toField = [\n      from,\n      this.state.item.email,\n      this.state.item.franchiseeEmail\n    ];\n    const account = this.state.item.accountName;\n    const pdfAttachement = this.state.attachement\n    const emailData = {\n      from: from,\n      to: toField,\n      subject: \"New Start Form submission for \" + account,\n      body: \"Testing and testing\",\n      attachments: [\n        { content: pdfAttachement, filename: 'NewStartForm', type: 'application/pdf', disposition: 'attachment' },\n      ],\n      html: \"<strong>and easy to do anywhere, even with Node.js</strong>\"\n    };\n    axios.post(\"/send-email\", emailData).then(res => {\n      console.log(res);\n      console.log(res.data);\n    });\n  };\n\n  render() {\n    return (\n      <React.Fragment>\n        <Nav />\n        <br />\n        <h1>Stratus New Account Start Form</h1>\n        <br />\n        <StartForm\n          item={this.state.item}\n          handleInputChange={this.handleInputChange}\n          onWalkDateChange={this.onWalkDateChange}\n          onStartDateChange={this.onStartDateChange}\n          handleSubmit={this.handleSubmit}\n        />\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}